// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using GeneratorsData;
public static class MapQueryToPredicateExtensions{
	public static Expression<Func<GetQuery,bool>> GetPredicate(this GetQuery queryDto){
 	return x =>(string.IsNullOrEmpty( x.Identifiant)?true:x.Identifiant==queryDto.Identifiant);
 	}
	public static IQueryable<GetQuery> Where(this IQueryable<GetQuery> queryable, GetQuery queryDto)
 	{
  	return queryable.Where(GetPredicate(queryDto));
  	}
 	public static Expression<Func<BrowseQuery,bool>> GetPredicate(this BrowseQuery queryDto){
  	return x =>(string.IsNullOrEmpty( x.Identifiant)?true:x.Identifiant==queryDto.Identifiant);
  	}
 	public static IQueryable<BrowseQuery> Where(this IQueryable<BrowseQuery> queryable, BrowseQuery queryDto)
  	{
   	return queryable.Where(GetPredicate(queryDto));
   	}
}
